name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2

        with:
          php-version: '8.2'

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Setup Environment File
        run: |
          cp .env.example .env
          sed -i 's/APP_URL=/APP_URL=${{ secrets.APP_URL }}/g' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=${{ secrets.DB_USERNAME }}/g' .env
          sed -i 's/# DB_PASSWORD=/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/g' .env

      - name: Setup Laravel
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
          php artisan storage:link
      - name: Permission setup
        run: |
          chmod -R 777 storage bootstrap/cache

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install Node.js Dependencies
        run: npm install
      - name: Build Vue.js
        run: npm run build
      - name: Clean Up
        run: rm -rf node_modules
      - name: copy file via ssh key  ${{ secrets.DB_USERNAME }} - ${{ secrets.SERVER_IP }} - ${{ secrets.DEPLOY_KEY }} |
        uses: appleboy/scp-action@v0.1.4

        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          key: ${{ secrets.DEPLOY_KEY }}
          source: "./"
          target: "/home/${{ secrets.SERVER_USERNAME }}/${{ secrets.APP_FOLDER }}"

      - name: Run laravel commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script:
            chown -R www-data /home/${{ secrets.SERVER_USERNAME }}/${{ secrets.APP_FOLDER }} && cd /home/${{ secrets.SERVER_USERNAME }}/${{ secrets.APP_FOLDER }} && php artisan cache:clear && php artisan config:clear && php artisan view:clear && php artisan migrate
            
      - name: SSH and setup Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            # Установка Nginx (если не установлен)
            sudo apt update
            sudo apt install -y nginx
      
            # Проверка существования конфигурации
            if [ ! -f /etc/nginx/sites-available/${{ secrets.APP_FOLDER }} ]; then
              # Создание конфигурации Nginx, если файл не существует
              sudo bash -c 'cat > /etc/nginx/sites-available/${{ secrets.APP_NAME }} <<EOF
              server {
                  listen 80;
                  listen [::]:80;
                  server_name ${{ secrets.APP_URL }};
                  root /home/${{ secrets.SERVER_USERNAME }}/${{ secrets.APP_FOLDER }}/public;
              
                  add_header X-Frame-Options "SAMEORIGIN";
                  add_header X-Content-Type-Options "nosniff";
              
                  index index.php;
              
                  charset utf-8;
              
                  location / {
                      try_files $uri $uri/ /index.php?$query_string;
                  }
              
                  location = /favicon.ico { access_log off; log_not_found off; }
                  location = /robots.txt  { access_log off; log_not_found off; }
              
                  error_page 404 /index.php;
              
                  location ~ ^/index\.php(/|$) {
                      fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
                      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                      include fastcgi_params;
                      fastcgi_hide_header X-Powered-By;
                  }
              
                  location ~ /\.(?!well-known).* {
                      deny all;
                  }
              }
              EOF'
      
              # Активация конфигурации
              sudo ln -sf /etc/nginx/sites-available/${{ secrets.APP_NAME }} /etc/nginx/sites-enabled/
              sudo nginx -t
              sudo systemctl reload nginx
            else
              echo "Конфигурация Nginx уже существует, пропускаем создание."
            fi
